AWSTemplateFormatVersion: '2010-09-09'
Description: CodePipeline for building and deploying the Test Data Visualizer application

Parameters:
  Environment:
    Type: String
    Description: The environment for the pipeline (e.g., Testing, Production)
  GitBranch:
    Type: String
    Description: The GitHub branch to deploy from
  FullRepositoryId:
    Type: String
    Description: The full repository ID (e.g., username/repository)
  CodeStarConnectionArn:
    Type: String
    Description: The ARN for the CodeStar Connection
  UniqueID:
    Type: String
    Description: Unique ID for resources to avoid naming conflicts

Resources:
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${UniqueID}-pipeline-artifacts-${AWS::Region}"
      VersioningConfiguration:
        Status: Enabled

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${UniqueID}-CodePipelineRole-${Environment}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - codestar-connections:UseConnection
                Resource: "*"

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${UniqueID}-CodeBuildRole-${Environment}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:PutImage
                Resource: "*"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${UniqueID}-BuildProject-${Environment}"
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: REPOSITORY_URI
            Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${FullRepositoryId}"
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo "Logging in to Amazon ECR..."
                - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
            build:
              commands:
                - echo "Building the Docker image..."
                - docker build -t $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION .
                - docker tag $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION $REPOSITORY_URI:latest
            post_build:
              commands:
                - echo "Pushing the Docker image..."
                - docker push $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
                - docker push $REPOSITORY_URI:latest
          artifacts:
            files:
              - '**/*'

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceCodeRepo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1  # Make sure to use the correct version
              Configuration:
                ConnectionArn: !Ref CodeStarConnectionArn
                FullRepositoryId: !Ref FullRepositoryId
                BranchName: !Ref GitBranch
              OutputArtifacts:
                - Name: SourceCodeAsZip
        - Name: Build
          Actions:
            - Name: BuildContainerImage
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: BuiltApp
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      Name: !Sub "${UniqueID}-pipeline-${Environment}"
      RestartExecutionOnUpdate: true

Outputs:
  PipelineName:
    Description: Name of the pipeline created
    Value: !Sub "${UniqueID}-pipeline-${Environment}"

