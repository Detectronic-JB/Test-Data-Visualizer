AWSTemplateFormatVersion: '2010-09-09'
Description: CodePipeline for building and deploying the Test Data Visualizer application

Parameters:
  Environment:
    Type: String
    Default: Testing
    Description: The environment for the pipeline
  GitBranch:
    Type: String
    Default: main
    Description: The GitHub branch to deploy from
  FullRepositoryId:
    Type: String
    Default: my-app-repo
    Description: The full repository ID
  CodeStarConnectionArn:
    Type: String
    Default: arn:aws:codeconnections:eu-west-1:583261726886:connection/561ae0bc-b2c3-45f3-adb0-dee3386746e4
    Description: The ARN for the CodeStar Connection
  UniqueID:
    Type: String
    Description: Unique ID for resources to avoid naming conflicts

Resources:
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: ${UniqueID}-pipeline-artifacts-${AWS::Region}
      VersioningConfiguration:
        Status: Enabled
    Metadata:
      SamResourceId: PipelineArtifactsBucket

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${UniqueID}-CodePipelineRole-${Environment}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: CodePipelinePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:*
            - codebuild:*
            - codestar-connections:UseConnection
            Resource: '*'
    Metadata:
      SamResourceId: CodePipelineRole

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${UniqueID}-CodeBuildRole-${Environment}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: CodeBuildPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - s3:GetObject
            - s3:PutObject
            - s3:GetObjectVersion
            - ecr:GetAuthorizationToken
            - ecr:BatchCheckLayerAvailability
            - ecr:GetDownloadUrlForLayer
            - ecr:BatchGetImage
            - ecr:PutImage
            Resource: '*'
    Metadata:
      SamResourceId: CodeBuildServiceRole

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: ${UniqueID}-BuildProject-${Environment}
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole:
        Fn::GetAtt:
        - CodeBuildServiceRole
        - Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
        - Name: REPOSITORY_URI
          Value:
            Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${FullRepositoryId}
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo "Logging in to Amazon ECR..."
                - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
            build:
              commands:
                - echo "Building the Docker image..."
                - docker build -t $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION .
                - docker tag $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION $REPOSITORY_URI:latest
            post_build:
              commands:
                - echo "Pushing the Docker image..."
                - docker push $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
                - docker push $REPOSITORY_URI:latest
          artifacts:
            files:
              - '**/*'
    Metadata:
      SamResourceId: CodeBuildProject

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
        - CodePipelineRole
        - Arn
      Stages:
      - Name: Source
        Actions:
        - Name: SourceCodeRepo
          ActionTypeId:
            Category: Source
            Owner: AWS
            Provider: CodeStarSourceConnection
            Version: 1
          Configuration:
            ConnectionArn:
              Ref: CodeStarConnectionArn
            FullRepositoryId:
              Ref: FullRepositoryId
            BranchName:
              Ref: GitBranch
          OutputArtifacts:
          - Name: SourceCodeAsZip
      - Name: Build
        Actions:
        - Name: BuildContainerImage
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName:
              Ref: CodeBuildProject
          InputArtifacts:
          - Name: SourceCodeAsZip
          OutputArtifacts:
          - Name: BuiltApp
      ArtifactStore:
        Type: S3
        Location:
          Ref: PipelineArtifactsBucket
      Name:
        Fn::Sub: ${UniqueID}-pipeline-${Environment}
      RestartExecutionOnUpdate: true
    Metadata:
      SamResourceId: Pipeline

Outputs:
  PipelineName:
    Description: Name of the pipeline created
    Value:
      Fn::Sub: ${UniqueID}-pipeline-${Environment}
