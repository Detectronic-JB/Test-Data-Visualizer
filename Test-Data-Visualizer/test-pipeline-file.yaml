AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This template deploys a testing CodePipeline with its required resources for the Data Visualizer Test environment,
  including an App Runner service.

Parameters:
  Environment:
    Type: String
    Default: "Testing"
  TestGitBranch:
    Type: String
    Default: "main"
  FullRepositoryId:
    Type: String
    Default: "Detectronic-JB/Test-Data-Visualizer"
  CodeStarConnectionArn:
    Type: String
    Default: "arn:aws:codestar-connections:eu-west-1:583261726886:connection/7fba6c00-7d2d-4878-8ac6-13f47013dfa7"
  EcrImageTag:
    Type: String
    Default: "latest"
  TestingRdsCredsSecretArn:
    Type: String
    Default: "arn:aws:secretsmanager:eu-west-1:583261726886:secret:DataVisualizer/Rds/Test-RPbAAd"
  TestingSecretKeySecretArn:
    Type: String
    Default: "arn:aws:secretsmanager:eu-west-1:583261726886:secret:DataVisualizer/Secret-Test-iTBotZ"
  TestingVpcSecurityGroupId:
    Type: String
    Default: "sg-0e14d868dfd8294ef"
  TestingVpcSubnetId1:
    Type: String
    Default: "subnet-00c4efa393215aa"  # Private Subnet 1
  TestingVpcSubnetId2:
    Type: String
    Default: "subnet-083d121cdc5bc5e0c"  # Private Subnet 2
  TestingVpcSubnetId3:
    Type: String
    Default: "subnet-0e816d94fb9e38d54"  # Public Subnet

Resources:
  # CodePipeline definition and supporting resources...
  
  AppRunnerService:
    Type: AWS::AppRunner::Service
    Properties:
      ServiceName: "DataVizAppService"
      SourceConfiguration:
        ImageRepository:
          ImageIdentifier: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/datavisualizer:${EcrImageTag}"
          ImageRepositoryType: ECR
        AuthenticationConfiguration:
          AccessRoleArn: !GetAtt AppRunnerServiceRole.Arn
      InstanceConfiguration:
        Cpu: "1 vCPU"
        Memory: "2 GB"
      NetworkConfiguration:
        EgressConfiguration:
          EgressType: VPC
          VpcConnectorArn: !Ref AppRunnerVpcConnector
      Tags:
        - Key: "Environment"
          Value: "Test"

  AppRunnerServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "sts:AssumeRole"
            Principal:
              Service: apprunner.amazonaws.com
      Policies:
        - PolicyName: AppRunnerECRAccessPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:DescribeImages"
                Resource: !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/datavisualizer"
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/apprunner/*"

  AppRunnerVpcConnector:
    Type: AWS::AppRunner::VpcConnector
    Properties:
      Subnets:
        - !Ref TestingVpcSubnetId1
        - !Ref TestingVpcSubnetId2
        - !Ref TestingVpcSubnetId3
      SecurityGroups:
        - !Ref TestingVpcSecurityGroupId

Outputs:
  AppRunnerServiceURL:
    Description: "URL of the App Runner service"
    Value: !GetAtt AppRunnerService.ServiceUrl
