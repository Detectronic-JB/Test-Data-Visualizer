AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This template deploys a testing CodePipeline with its required resources for the Data Visualizer Test environment,
  including an App Runner service.

Parameters:
  Environment:
    Type: String
    Default: "Testing"
  TestGitBranch:
    Type: String
    Default: "main"
  FullRepositoryId:
    Type: String
    Default: "Detectronic-JB/Test-Data-Visualizer"
  CodeStarConnectionArn:
    Type: String
    Default: "arn:aws:codestar-connections:eu-west-1:583261726886:connection/7fba6c00-7d2d-4878-8ac6-13f47013dfa7"
  EcrImageTag:
    Type: String
    Default: "latest"
  TestingRdsCredsSecretArn:
    Type: String
    Default: "arn:aws:secretsmanager:eu-west-1:583261726886:secret:DataVisualizer/Rds/Test-RPbAAd"
  TestingSecretKeySecretArn:
    Type: String
    Default: "arn:aws:secretsmanager:eu-west-1:583261726886:secret:DataVisualizer/Secret-Test-iTBotZ"
  TestingRdsUserArn:
    Type: String
    Default: "arn:aws:rds:eu-west-1:583261726886:db:datavis-testing"
  TestingVpcSecurityGroupId:
    Type: String
    Default: "sg-0e14d868dfd8294ef"
  TestingVpcSubnetId1:
    Type: String
    Default: "subnet-00c4efa393215aa"
  TestingVpcSubnetId2:
    Type: String
    Default: "subnet-083d121cdc5bc5e0c"
  TestingVpcSubnetId3:
    Type: String
    Default: "subnet-0e816d94fb9e38d54"

Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref PipelineArtifactsBucket
        Type: S3
      RoleArn: !GetAtt CodePipelineExecutionRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceCodeRepo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !Ref CodeStarConnectionArn
                FullRepositoryId: !Ref FullRepositoryId
                BranchName: !Ref TestGitBranch
              OutputArtifacts:
                - Name: SourceCodeAsZip
        - Name: UpdatePipeline
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt PipelineStackCloudFormationExecutionRole.Arn
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
                TemplatePath: SourceCodeAsZip::test-pipeline-file.yaml
                TemplateConfiguration: SourceCodeAsZip::test-configuration.json
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: !Sub |
                  {
                    "TestGitBranch": "${TestGitBranch}",
                    "CodeStarConnectionArn": "${CodeStarConnectionArn}"
                  }
              InputArtifacts:
                - Name: SourceCodeAsZip
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt PipelineStackCloudFormationExecutionRole.Arn
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
        - Name: UnitTest
          Actions:
            - Name: UnitTest
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildProjectUnitTest
              InputArtifacts:
                - Name: SourceCodeAsZip
        - Name: BuildAndDeploy
          Actions:
            - Name: BuildContainerImage
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceCodeAsZip
              Configuration:
                ProjectName: !Ref CodeBuildProjectBuild
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              InputArtifacts:
                - Name: SourceCodeAsZip
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt PipelineStackCloudFormationExecutionRole.Arn
                StackName: !Ref AWS::StackName
                TemplatePath: SourceCodeAsZip::test-pipeline-file.yaml
                Capabilities: CAPABILITY_NAMED_IAM

  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "datavisualizer-test-artifacts"
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref PipelineArtifactsLoggingBucket
        LogFilePrefix: "artifacts-logs"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  PipelineArtifactsLoggingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "datavisualizer-test-logging"
      VersioningConfiguration:
        Status: Enabled
      AccessControl: LogDeliveryWrite
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "sts:AssumeRole"
            Principal:
              Service: codepipeline.amazonaws.com
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: "iam:PassRole"
                Resource: "*"
        - PolicyName: CodeStarConnectionAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: "codestar-connections:UseConnection"
                Resource: !Ref CodeStarConnectionArn
        - PolicyName: CodePipelineCodeAndS3Bucket
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetBucketAcl"
                  - "s3:GetBucketLocation"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource: !Sub "${PipelineArtifactsBucket.Arn}/*"

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "sts:AssumeRole"
            Principal:
              Service: codebuild.amazonaws.com
      Policies:
        - PolicyName: CodeBuildECR
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:CompleteLayerUpload"
                  - "ecr:GetAuthorizationToken"
                  - "ecr:InitiateLayerUpload"
                  - "ecr:PutImage"
                  - "ecr:UploadLayerPart"
                Resource: "*"
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
        - PolicyName: CodeBuildArtifactsBucket
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource: !Sub "arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}/*"

  PipelineStackCloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action: "sts:AssumeRole"
          Principal:
            Service: cloudformation.amazonaws.com
      Policies:
        - PolicyName: CloudFormationPipelineRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:DescribeStackResources"
                  - "cloudformation:DescribeStackResource"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:GetTemplate"
                  - "cloudformation:ListStackResources"
                  - "cloudformation:ListStacks"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateStack"
                Resource: "*"

  CodeBuildProjectUnitTest:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 60
      Description: "Build project for unit tests"

  CodeBuildProjectBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 60
      Description: "Build project for container image"

  AppRunnerService:
    Type: AWS::AppRunner::Service
    Properties:
      ServiceName: !Sub "DataVisualizerApp-${AWS::StackName}"
      SourceConfiguration:
        ImageRepository:
          ImageIdentifier: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/datavisualizer:${EcrImageTag}"
          ImageRepositoryType: ECR
        AuthenticationConfiguration:
          AccessRoleArn: !GetAtt AppRunnerServiceRole.Arn
      InstanceConfiguration:
        Cpu: "1 vCPU"
        Memory: "2 GB"
      Tags:
        - Key: "Environment"
          Value: "Test"

  AppRunnerServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "sts:AssumeRole"
            Principal:
              Service: apprunner.amazonaws.com
      Policies:
        - PolicyName: AppRunnerECRAccessPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:DescribeImages"
                Resource: !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/datavisualizer"
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/apprunner/*"

Outputs:
  PipelineId:
    Description: "The ID of the CodePipeline."
    Value: !Ref Pipeline
  AppRunnerServiceUrl:
    Description: "URL of the App Runner service."
    Value: !GetAtt AppRunnerService.ServiceUrl
